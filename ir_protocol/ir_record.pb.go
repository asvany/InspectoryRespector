// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        v3.21.12
// source: ir_record.proto

package ir_protocol

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type EventType int32

const (
	EventType_KEY_UP      EventType = 0
	EventType_KEY_DOWN    EventType = 1
	EventType_MOTION      EventType = 2
	EventType_BUTTON_UP   EventType = 3
	EventType_BUTTON_DOWN EventType = 4
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0: "KEY_UP",
		1: "KEY_DOWN",
		2: "MOTION",
		3: "BUTTON_UP",
		4: "BUTTON_DOWN",
	}
	EventType_value = map[string]int32{
		"KEY_UP":      0,
		"KEY_DOWN":    1,
		"MOTION":      2,
		"BUTTON_UP":   3,
		"BUTTON_DOWN": 4,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_ir_record_proto_enumTypes[0].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_ir_record_proto_enumTypes[0]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_ir_record_proto_rawDescGZIP(), []int{0}
}

type Event struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	DeviceName string                 `protobuf:"bytes,2,opt,name=device_name,json=deviceName,proto3" json:"device_name,omitempty"`
	DeviceId   uint64                 `protobuf:"varint,3,opt,name=device_id,json=deviceId,proto3" json:"device_id,omitempty"`
	EventType  EventType              `protobuf:"varint,4,opt,name=event_type,json=eventType,proto3,enum=ir_protocol.EventType" json:"event_type,omitempty"`
	// Types that are assignable to EventData:
	//
	//	*Event_KeyEventData
	//	*Event_MotionEventData
	EventData isEvent_EventData `protobuf_oneof:"event_data"`
}

func (x *Event) Reset() {
	*x = Event{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ir_record_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Event) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Event) ProtoMessage() {}

func (x *Event) ProtoReflect() protoreflect.Message {
	mi := &file_ir_record_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Event.ProtoReflect.Descriptor instead.
func (*Event) Descriptor() ([]byte, []int) {
	return file_ir_record_proto_rawDescGZIP(), []int{0}
}

func (x *Event) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *Event) GetDeviceName() string {
	if x != nil {
		return x.DeviceName
	}
	return ""
}

func (x *Event) GetDeviceId() uint64 {
	if x != nil {
		return x.DeviceId
	}
	return 0
}

func (x *Event) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_KEY_UP
}

func (m *Event) GetEventData() isEvent_EventData {
	if m != nil {
		return m.EventData
	}
	return nil
}

func (x *Event) GetKeyEventData() *KeyEventData {
	if x, ok := x.GetEventData().(*Event_KeyEventData); ok {
		return x.KeyEventData
	}
	return nil
}

func (x *Event) GetMotionEventData() *MotionEventData {
	if x, ok := x.GetEventData().(*Event_MotionEventData); ok {
		return x.MotionEventData
	}
	return nil
}

type isEvent_EventData interface {
	isEvent_EventData()
}

type Event_KeyEventData struct {
	KeyEventData *KeyEventData `protobuf:"bytes,5,opt,name=key_event_data,json=keyEventData,proto3,oneof"`
}

type Event_MotionEventData struct {
	MotionEventData *MotionEventData `protobuf:"bytes,6,opt,name=motion_event_data,json=motionEventData,proto3,oneof"`
}

func (*Event_KeyEventData) isEvent_EventData() {}

func (*Event_MotionEventData) isEvent_EventData() {}

type KeyEventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeyCode int32 `protobuf:"varint,1,opt,name=key_code,json=keyCode,proto3" json:"key_code,omitempty"`
}

func (x *KeyEventData) Reset() {
	*x = KeyEventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ir_record_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyEventData) ProtoMessage() {}

func (x *KeyEventData) ProtoReflect() protoreflect.Message {
	mi := &file_ir_record_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyEventData.ProtoReflect.Descriptor instead.
func (*KeyEventData) Descriptor() ([]byte, []int) {
	return file_ir_record_proto_rawDescGZIP(), []int{1}
}

func (x *KeyEventData) GetKeyCode() int32 {
	if x != nil {
		return x.KeyCode
	}
	return 0
}

type MotionEventData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AxisPositions []*AxisPosition `protobuf:"bytes,1,rep,name=axis_positions,json=axisPositions,proto3" json:"axis_positions,omitempty"`
}

func (x *MotionEventData) Reset() {
	*x = MotionEventData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ir_record_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MotionEventData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MotionEventData) ProtoMessage() {}

func (x *MotionEventData) ProtoReflect() protoreflect.Message {
	mi := &file_ir_record_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MotionEventData.ProtoReflect.Descriptor instead.
func (*MotionEventData) Descriptor() ([]byte, []int) {
	return file_ir_record_proto_rawDescGZIP(), []int{2}
}

func (x *MotionEventData) GetAxisPositions() []*AxisPosition {
	if x != nil {
		return x.AxisPositions
	}
	return nil
}

type AxisPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Axis     int32 `protobuf:"varint,1,opt,name=axis,proto3" json:"axis,omitempty"`
	Position int32 `protobuf:"varint,2,opt,name=position,proto3" json:"position,omitempty"`
}

func (x *AxisPosition) Reset() {
	*x = AxisPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ir_record_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AxisPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AxisPosition) ProtoMessage() {}

func (x *AxisPosition) ProtoReflect() protoreflect.Message {
	mi := &file_ir_record_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AxisPosition.ProtoReflect.Descriptor instead.
func (*AxisPosition) Descriptor() ([]byte, []int) {
	return file_ir_record_proto_rawDescGZIP(), []int{3}
}

func (x *AxisPosition) GetAxis() int32 {
	if x != nil {
		return x.Axis
	}
	return 0
}

func (x *AxisPosition) GetPosition() int32 {
	if x != nil {
		return x.Position
	}
	return 0
}

type WindowChange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp  *timestamppb.Timestamp `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Properties map[string]string      `protobuf:"bytes,2,rep,name=properties,proto3" json:"properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Events     []*Event               `protobuf:"bytes,3,rep,name=events,proto3" json:"events,omitempty"`
}

func (x *WindowChange) Reset() {
	*x = WindowChange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_ir_record_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindowChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindowChange) ProtoMessage() {}

func (x *WindowChange) ProtoReflect() protoreflect.Message {
	mi := &file_ir_record_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindowChange.ProtoReflect.Descriptor instead.
func (*WindowChange) Descriptor() ([]byte, []int) {
	return file_ir_record_proto_rawDescGZIP(), []int{4}
}

func (x *WindowChange) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *WindowChange) GetProperties() map[string]string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *WindowChange) GetEvents() []*Event {
	if x != nil {
		return x.Events
	}
	return nil
}

var File_ir_record_proto protoreflect.FileDescriptor

var file_ir_record_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x69, 0x72, 0x5f, 0x72, 0x65, 0x63, 0x6f, 0x72, 0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0b, 0x69, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xd3, 0x02, 0x0a, 0x05, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d,
	0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x1f, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x49,
	0x64, 0x12, 0x35, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x69, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x41, 0x0a, 0x0e, 0x6b, 0x65, 0x79, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x69, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4b,
	0x65, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0c, 0x6b,
	0x65, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x4a, 0x0a, 0x11, 0x6d,
	0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x42, 0x0c, 0x0a, 0x0a, 0x65, 0x76, 0x65, 0x6e, 0x74,
	0x5f, 0x64, 0x61, 0x74, 0x61, 0x22, 0x29, 0x0a, 0x0c, 0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x19, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x5f, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65,
	0x22, 0x53, 0x0a, 0x0f, 0x4d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0e, 0x61, 0x78, 0x69, 0x73, 0x5f, 0x70, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x41, 0x78, 0x69, 0x73, 0x50, 0x6f,
	0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x61, 0x78, 0x69, 0x73, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x3e, 0x0a, 0x0c, 0x41, 0x78, 0x69, 0x73, 0x50, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x78, 0x69, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x61, 0x78, 0x69, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xfe, 0x01, 0x0a, 0x0c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x12, 0x49, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69, 0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63,
	0x6f, 0x6c, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x2e,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x06, 0x65,
	0x76, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x72,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x2e, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x52,
	0x06, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x3d, 0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x69, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x2a, 0x51, 0x0a, 0x09, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x45, 0x59, 0x5f, 0x55, 0x50, 0x10, 0x00, 0x12,
	0x0c, 0x0a, 0x08, 0x4b, 0x45, 0x59, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x01, 0x12, 0x0a, 0x0a,
	0x06, 0x4d, 0x4f, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x55, 0x54,
	0x54, 0x4f, 0x4e, 0x5f, 0x55, 0x50, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x42, 0x55, 0x54, 0x54,
	0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x04, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x2f, 0x69,
	0x72, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_ir_record_proto_rawDescOnce sync.Once
	file_ir_record_proto_rawDescData = file_ir_record_proto_rawDesc
)

func file_ir_record_proto_rawDescGZIP() []byte {
	file_ir_record_proto_rawDescOnce.Do(func() {
		file_ir_record_proto_rawDescData = protoimpl.X.CompressGZIP(file_ir_record_proto_rawDescData)
	})
	return file_ir_record_proto_rawDescData
}

var file_ir_record_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_ir_record_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_ir_record_proto_goTypes = []interface{}{
	(EventType)(0),                // 0: ir_protocol.EventType
	(*Event)(nil),                 // 1: ir_protocol.Event
	(*KeyEventData)(nil),          // 2: ir_protocol.KeyEventData
	(*MotionEventData)(nil),       // 3: ir_protocol.MotionEventData
	(*AxisPosition)(nil),          // 4: ir_protocol.AxisPosition
	(*WindowChange)(nil),          // 5: ir_protocol.WindowChange
	nil,                           // 6: ir_protocol.WindowChange.PropertiesEntry
	(*timestamppb.Timestamp)(nil), // 7: google.protobuf.Timestamp
}
var file_ir_record_proto_depIdxs = []int32{
	7, // 0: ir_protocol.Event.timestamp:type_name -> google.protobuf.Timestamp
	0, // 1: ir_protocol.Event.event_type:type_name -> ir_protocol.EventType
	2, // 2: ir_protocol.Event.key_event_data:type_name -> ir_protocol.KeyEventData
	3, // 3: ir_protocol.Event.motion_event_data:type_name -> ir_protocol.MotionEventData
	4, // 4: ir_protocol.MotionEventData.axis_positions:type_name -> ir_protocol.AxisPosition
	7, // 5: ir_protocol.WindowChange.timestamp:type_name -> google.protobuf.Timestamp
	6, // 6: ir_protocol.WindowChange.properties:type_name -> ir_protocol.WindowChange.PropertiesEntry
	1, // 7: ir_protocol.WindowChange.events:type_name -> ir_protocol.Event
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_ir_record_proto_init() }
func file_ir_record_proto_init() {
	if File_ir_record_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_ir_record_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Event); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ir_record_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyEventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ir_record_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MotionEventData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ir_record_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AxisPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_ir_record_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindowChange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_ir_record_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Event_KeyEventData)(nil),
		(*Event_MotionEventData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_ir_record_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_ir_record_proto_goTypes,
		DependencyIndexes: file_ir_record_proto_depIdxs,
		EnumInfos:         file_ir_record_proto_enumTypes,
		MessageInfos:      file_ir_record_proto_msgTypes,
	}.Build()
	File_ir_record_proto = out.File
	file_ir_record_proto_rawDesc = nil
	file_ir_record_proto_goTypes = nil
	file_ir_record_proto_depIdxs = nil
}
